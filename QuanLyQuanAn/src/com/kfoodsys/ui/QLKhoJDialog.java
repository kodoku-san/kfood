package com.kfoodsys.ui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.util.StringUtils;
import com.kfoodsys.dao.KhoDAO;
import com.kfoodsys.dao.XuatKhoDAO;
import com.kfoodsys.entity.KhoNguyenLieu;
import com.kfoodsys.entity.XuatKho;
import com.kfoodsys.utils.MsgBox;
import com.kfoodsys.utils.XDate;
import com.kfoodsys.utils.XExport;
import com.kfoodsys.utils.XImage;
import com.kfoodsys.utils.XGenCode;
import java.awt.Color;
import java.io.File;
import java.text.Normalizer;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author phuho
 */
public class QLKhoJDialog extends javax.swing.JDialog {

    public QLKhoJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        paneKhoNL = new javax.swing.JTabbedPane();
        paneThongTin = new javax.swing.JPanel();
        paneBgThongTin = new javax.swing.JPanel();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblTenNL = new javax.swing.JLabel();
        txtTenNL = new javax.swing.JTextField();
        lblNgayNhap = new javax.swing.JLabel();
        txtNgayNhap = new javax.swing.JTextField();
        lblSoLuongTon = new javax.swing.JLabel();
        txtSoLuongTon = new javax.swing.JTextField();
        lblDonVi = new javax.swing.JLabel();
        txtDonVi = new javax.swing.JTextField();
        lblDanhMuc = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnPre = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        rdoT = new javax.swing.JRadioButton();
        rdoTU = new javax.swing.JRadioButton();
        rdoRCQ = new javax.swing.JRadioButton();
        rdoGV = new javax.swing.JRadioButton();
        rdoHS = new javax.swing.JRadioButton();
        txtSoLuongNhap = new javax.swing.JTextField();
        lblSoLuongNhap = new javax.swing.JLabel();
        lblNhapNLByQR = new javax.swing.JLabel();
        paneDanhSach = new javax.swing.JPanel();
        paneBgDanhSach = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        rdoKhoThit = new javax.swing.JRadioButton();
        rdoKhoThucUong = new javax.swing.JRadioButton();
        rdoKhoRau = new javax.swing.JRadioButton();
        rdoKhoGiaVi = new javax.swing.JRadioButton();
        rdoKhoHaiSan = new javax.swing.JRadioButton();
        rdoAll = new javax.swing.JRadioButton();
        rdoKhoHetHang = new javax.swing.JRadioButton();
        btnTaoQR = new javax.swing.JButton();
        pane1 = new javax.swing.JPanel();
        paneBgDanhSach1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblDanhSach1 = new javax.swing.JTable();
        txtSearch1 = new javax.swing.JTextField();
        btnXuatKho = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        fileChooser.setCurrentDirectory(new java.io.File("C:\\"));
            fileChooser.setDialogTitle("Chọn QR code nguyên liệu");

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            setTitle("Kho nguyên liệu - KFood");
            setResizable(false);

            paneKhoNL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            paneKhoNL.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

            paneThongTin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            paneBgThongTin.setBackground(new java.awt.Color(255, 255, 255));

            lblID.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
            lblID.setText("ID");

            txtID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            txtID.setEnabled(false);

            lblTenNL.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
            lblTenNL.setText("Tên NL");

            txtTenNL.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            txtTenNL.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    txtTenNLKeyReleased(evt);
                }
            });

            lblNgayNhap.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
            lblNgayNhap.setText("Ngày nhập");

            txtNgayNhap.setEditable(false);
            txtNgayNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

            lblSoLuongTon.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
            lblSoLuongTon.setText("Số lượng tồn");

            txtSoLuongTon.setEditable(false);
            txtSoLuongTon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

            lblDonVi.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
            lblDonVi.setText("Đơn vị");

            txtDonVi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

            lblDanhMuc.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
            lblDanhMuc.setText("Danh mục");

            btnUpdate.setBackground(new java.awt.Color(219, 104, 108));
            btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
            btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-edit-20.png"))); // NOI18N
            btnUpdate.setText("Sửa");
            btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            btnUpdate.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnUpdateActionPerformed(evt);
                }
            });

            btnInsert.setBackground(new java.awt.Color(219, 104, 108));
            btnInsert.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            btnInsert.setForeground(new java.awt.Color(255, 255, 255));
            btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-save-20.png"))); // NOI18N
            btnInsert.setText("Thêm");
            btnInsert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            btnInsert.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnInsertActionPerformed(evt);
                }
            });

            btnPre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            btnPre.setForeground(new java.awt.Color(51, 0, 51));
            btnPre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/Left.png"))); // NOI18N
            btnPre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            btnPre.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnPreActionPerformed(evt);
                }
            });

            btnNew.setBackground(new java.awt.Color(219, 104, 108));
            btnNew.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            btnNew.setForeground(new java.awt.Color(255, 255, 255));
            btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-new-copy-20.png"))); // NOI18N
            btnNew.setText("New");
            btnNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            btnNew.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnNewActionPerformed(evt);
                }
            });

            btnDelete.setBackground(new java.awt.Color(219, 104, 108));
            btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            btnDelete.setForeground(new java.awt.Color(255, 255, 255));
            btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-delete-20.png"))); // NOI18N
            btnDelete.setText("Xóa");
            btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            btnDelete.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnDeleteActionPerformed(evt);
                }
            });

            btnNext.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            btnNext.setForeground(new java.awt.Color(51, 0, 51));
            btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/Right.png"))); // NOI18N
            btnNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            btnNext.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnNextActionPerformed(evt);
                }
            });

            buttonGroup1.add(rdoT);
            rdoT.setSelected(true);
            rdoT.setText("Kho thịt");
            rdoT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

            buttonGroup1.add(rdoTU);
            rdoTU.setText("Kho thức uống");
            rdoTU.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

            buttonGroup1.add(rdoRCQ);
            rdoRCQ.setText("Kho rau - củ -quả");
            rdoRCQ.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

            buttonGroup1.add(rdoGV);
            rdoGV.setText("Kho gia vị");
            rdoGV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

            buttonGroup1.add(rdoHS);
            rdoHS.setText("Kho hải sản");
            rdoHS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

            txtSoLuongNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

            lblSoLuongNhap.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
            lblSoLuongNhap.setText("Số lượng nhập");

            lblNhapNLByQR.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            lblNhapNLByQR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-qr-code-20.png"))); // NOI18N
            lblNhapNLByQR.setText("Nhập nguyên liệu bằng mã QR");
            lblNhapNLByQR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lblNhapNLByQR.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    lblNhapNLByQRMouseClicked(evt);
                }
            });

            javax.swing.GroupLayout paneBgThongTinLayout = new javax.swing.GroupLayout(paneBgThongTin);
            paneBgThongTin.setLayout(paneBgThongTinLayout);
            paneBgThongTinLayout.setHorizontalGroup(
                paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneBgThongTinLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(paneBgThongTinLayout.createSequentialGroup()
                            .addComponent(btnInsert)
                            .addGap(18, 18, 18)
                            .addComponent(btnUpdate)
                            .addGap(18, 18, 18)
                            .addComponent(btnDelete)
                            .addGap(18, 18, 18)
                            .addComponent(btnNew)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPre, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6))
                        .addGroup(paneBgThongTinLayout.createSequentialGroup()
                            .addComponent(lblDonVi, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtDonVi))
                        .addGroup(paneBgThongTinLayout.createSequentialGroup()
                            .addComponent(lblSoLuongTon, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtSoLuongTon))
                        .addGroup(paneBgThongTinLayout.createSequentialGroup()
                            .addComponent(lblNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtNgayNhap))
                        .addGroup(paneBgThongTinLayout.createSequentialGroup()
                            .addComponent(lblTenNL, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtTenNL))
                        .addGroup(paneBgThongTinLayout.createSequentialGroup()
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtID))
                        .addGroup(paneBgThongTinLayout.createSequentialGroup()
                            .addComponent(lblDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rdoT)
                            .addGap(18, 18, 18)
                            .addComponent(rdoTU)
                            .addGap(18, 18, 18)
                            .addComponent(rdoHS)
                            .addGap(18, 18, 18)
                            .addComponent(rdoRCQ)
                            .addGap(18, 18, 18)
                            .addComponent(rdoGV)
                            .addGap(0, 266, Short.MAX_VALUE))
                        .addGroup(paneBgThongTinLayout.createSequentialGroup()
                            .addComponent(lblSoLuongNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtSoLuongNhap))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneBgThongTinLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(lblNhapNLByQR, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap())
            );
            paneBgThongTinLayout.setVerticalGroup(
                paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneBgThongTinLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(lblNhapNLByQR)
                    .addGap(12, 12, 12)
                    .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblID)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTenNL)
                        .addComponent(txtTenNL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNgayNhap)
                        .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSoLuongTon)
                        .addComponent(txtSoLuongTon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSoLuongNhap)
                        .addComponent(txtSoLuongNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDonVi)
                        .addComponent(txtDonVi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDanhMuc)
                        .addComponent(rdoT)
                        .addComponent(rdoTU)
                        .addComponent(rdoHS)
                        .addComponent(rdoRCQ)
                        .addComponent(rdoGV))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                    .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(paneBgThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addComponent(btnInsert)
                            .addComponent(btnPre, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNew)
                            .addComponent(btnDelete)))
                    .addGap(19, 19, 19))
            );

            javax.swing.GroupLayout paneThongTinLayout = new javax.swing.GroupLayout(paneThongTin);
            paneThongTin.setLayout(paneThongTinLayout);
            paneThongTinLayout.setHorizontalGroup(
                paneThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneThongTinLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(paneBgThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap())
            );
            paneThongTinLayout.setVerticalGroup(
                paneThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneThongTinLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(paneBgThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            paneKhoNL.addTab("Nhập kho", paneThongTin);

            paneDanhSach.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            paneBgDanhSach.setBackground(new java.awt.Color(255, 255, 255));

            tblDanhSach.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Mã NL", "Tên NL", "Nhóm NL", "Đơn vị", "Số lượng", "Ngày nhập"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            tblDanhSach.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            tblDanhSach.setRowHeight(27);
            tblDanhSach.setShowGrid(true);
            tblDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tblDanhSachMouseClicked(evt);
                }
            });
            jScrollPane4.setViewportView(tblDanhSach);

            txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    txtSearchKeyReleased(evt);
                }
            });

            buttonGroup2.add(rdoKhoThit);
            rdoKhoThit.setText("Kho thịt");
            rdoKhoThit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            rdoKhoThit.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rdoActionPerformed(evt);
                }
            });

            buttonGroup2.add(rdoKhoThucUong);
            rdoKhoThucUong.setText("Kho thức uống");
            rdoKhoThucUong.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            rdoKhoThucUong.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rdoActionPerformed(evt);
                }
            });

            buttonGroup2.add(rdoKhoRau);
            rdoKhoRau.setText("Kho rau - củ -quả");
            rdoKhoRau.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            rdoKhoRau.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rdoActionPerformed(evt);
                }
            });

            buttonGroup2.add(rdoKhoGiaVi);
            rdoKhoGiaVi.setText("Kho gia vị");
            rdoKhoGiaVi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            rdoKhoGiaVi.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rdoActionPerformed(evt);
                }
            });

            buttonGroup2.add(rdoKhoHaiSan);
            rdoKhoHaiSan.setText("Kho hải sản");
            rdoKhoHaiSan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            rdoKhoHaiSan.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rdoActionPerformed(evt);
                }
            });

            buttonGroup2.add(rdoAll);
            rdoAll.setSelected(true);
            rdoAll.setText("Tất cả");
            rdoAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            rdoAll.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rdoActionPerformed(evt);
                }
            });

            buttonGroup2.add(rdoKhoHetHang);
            rdoKhoHetHang.setText("Nguyên liệu hết hàng");
            rdoKhoHetHang.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            rdoKhoHetHang.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rdoActionPerformed(evt);
                }
            });

            btnTaoQR.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            btnTaoQR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-qr-code-20.png"))); // NOI18N
            btnTaoQR.setText("Tạo QR Code");
            btnTaoQR.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnTaoQRActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout paneBgDanhSachLayout = new javax.swing.GroupLayout(paneBgDanhSach);
            paneBgDanhSach.setLayout(paneBgDanhSachLayout);
            paneBgDanhSachLayout.setHorizontalGroup(
                paneBgDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneBgDanhSachLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(paneBgDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(paneBgDanhSachLayout.createSequentialGroup()
                            .addComponent(rdoKhoThit)
                            .addGap(18, 18, 18)
                            .addComponent(rdoKhoThucUong)
                            .addGap(18, 18, 18)
                            .addComponent(rdoKhoRau)
                            .addGap(18, 18, 18)
                            .addComponent(rdoKhoGiaVi)
                            .addGap(18, 18, 18)
                            .addComponent(rdoKhoHaiSan)
                            .addGap(18, 18, 18)
                            .addComponent(rdoAll)
                            .addGap(166, 166, 166)
                            .addComponent(rdoKhoHetHang)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneBgDanhSachLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(btnTaoQR)))
                    .addContainerGap())
            );
            paneBgDanhSachLayout.setVerticalGroup(
                paneBgDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneBgDanhSachLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnTaoQR)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(paneBgDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdoKhoThit)
                        .addComponent(rdoKhoThucUong)
                        .addComponent(rdoKhoRau)
                        .addComponent(rdoKhoGiaVi)
                        .addComponent(rdoKhoHaiSan)
                        .addComponent(rdoAll)
                        .addComponent(rdoKhoHetHang))
                    .addGap(18, 18, 18))
            );

            javax.swing.GroupLayout paneDanhSachLayout = new javax.swing.GroupLayout(paneDanhSach);
            paneDanhSach.setLayout(paneDanhSachLayout);
            paneDanhSachLayout.setHorizontalGroup(
                paneDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneDanhSachLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(paneBgDanhSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap())
            );
            paneDanhSachLayout.setVerticalGroup(
                paneDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneDanhSachLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(paneBgDanhSach, javax.swing.GroupLayout.PREFERRED_SIZE, 445, Short.MAX_VALUE))
            );

            paneKhoNL.addTab("Danh sách", paneDanhSach);

            paneBgDanhSach1.setBackground(new java.awt.Color(255, 255, 255));

            tblDanhSach1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            tblDanhSach1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "ID kho", "Ngày xuất", "Số lượng", "ID nhân viên"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            });
            tblDanhSach1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            tblDanhSach1.setRowHeight(27);
            tblDanhSach1.setShowGrid(true);
            jScrollPane5.setViewportView(tblDanhSach1);

            txtSearch1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            txtSearch1.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    txtSearch1KeyReleased(evt);
                }
            });

            btnXuatKho.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            btnXuatKho.setForeground(new java.awt.Color(51, 0, 51));
            btnXuatKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-microsoft-excel-20.png"))); // NOI18N
            btnXuatKho.setText("Xuất báo cáo");
            btnXuatKho.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            btnXuatKho.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnXuatKhoActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout paneBgDanhSach1Layout = new javax.swing.GroupLayout(paneBgDanhSach1);
            paneBgDanhSach1.setLayout(paneBgDanhSach1Layout);
            paneBgDanhSach1Layout.setHorizontalGroup(
                paneBgDanhSach1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneBgDanhSach1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(paneBgDanhSach1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
                        .addComponent(txtSearch1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(paneBgDanhSach1Layout.createSequentialGroup()
                            .addComponent(btnXuatKho)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            paneBgDanhSach1Layout.setVerticalGroup(
                paneBgDanhSach1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(paneBgDanhSach1Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12)
                    .addComponent(btnXuatKho, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12))
            );

            javax.swing.GroupLayout pane1Layout = new javax.swing.GroupLayout(pane1);
            pane1.setLayout(pane1Layout);
            pane1Layout.setHorizontalGroup(
                pane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(paneBgDanhSach1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap())
            );
            pane1Layout.setVerticalGroup(
                pane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(paneBgDanhSach1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            paneKhoNL.addTab("Xuất kho", pane1);

            paneKhoNL.setSelectedIndex(1);

            jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            jLabel2.setForeground(new java.awt.Color(255, 255, 255));
            jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel2.setText("Kho nguyên liệu");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(paneKhoNL)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(paneKhoNL)
                    .addContainerGap())
            );

            pack();
            setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        loadTableDanhSach();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void rdoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoActionPerformed
        loadTableDanhSach();
    }//GEN-LAST:event_rdoActionPerformed

    private void txtSearch1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearch1KeyReleased
        loadTableXuatKho();
    }//GEN-LAST:event_txtSearch1KeyReleased

    private void tblDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMouseClicked
        if (evt.getClickCount() == 2) {
            row = tblDanhSach.getSelectedRow();
            String maNL = tblDanhSach.getValueAt(row, 0).toString();
            setForm(khoDAO.selectById(maNL));
            paneKhoNL.setSelectedIndex(0);
        }
    }//GEN-LAST:event_tblDanhSachMouseClicked

    private void txtTenNLKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenNLKeyReleased
        if (row < 0) {
            txtID.setText(toIdNL(txtTenNL.getText().trim()));
        }
    }//GEN-LAST:event_txtTenNLKeyReleased

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        insert();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        prev();
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnXuatKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatKhoActionPerformed
        if (!listXuatKho.isEmpty()) {
            try {
                XExport.khoToExcel(listXuatKho);
                MsgBox.alert(this, "Xuất báo cáo thành công!");
            } catch (Exception e) {
                MsgBox.error(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnXuatKhoActionPerformed

    private void lblNhapNLByQRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNhapNLByQRMouseClicked
        clearForm();
        qrCode();
    }//GEN-LAST:event_lblNhapNLByQRMouseClicked

    private void btnTaoQRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoQRActionPerformed
        int[] rows = tblDanhSach.getSelectedRows();
        if (rows.length == 0) {
            MsgBox.alert(this, "Vui lòng chọn ít nhất 1 hàng cần tạo QR code");
        } else {
            try {
                for (int row : rows) {
                    String maNL = tblDanhSach.getValueAt(row, 0).toString();
                    String tenNL = tblDanhSach.getValueAt(row, 1).toString();
                    String donVi = tblDanhSach.getValueAt(row, 3).toString();
                    String nhomNL = tblDanhSach.getValueAt(row, 2).toString();
                    String data = "khonguyenlieuKFood16092002|" + maNL + "|" + tenNL + "|" + donVi + "|" + nhomNL;
                    XGenCode.createQRCode("khoNL\\" + tenNL, data);
                }
                MsgBox.alert(this, "Tạo QR code thành công!");
            } catch (Exception e) {
                MsgBox.error(this, e.getMessage());
            }

        }
    }//GEN-LAST:event_btnTaoQRActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
        } catch (Exception e) {
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QLKhoJDialog dialog = new QLKhoJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPre;
    private javax.swing.JButton btnTaoQR;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXuatKho;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblDanhMuc;
    private javax.swing.JLabel lblDonVi;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblNgayNhap;
    private javax.swing.JLabel lblNhapNLByQR;
    private javax.swing.JLabel lblSoLuongNhap;
    private javax.swing.JLabel lblSoLuongTon;
    private javax.swing.JLabel lblTenNL;
    private javax.swing.JPanel pane1;
    private javax.swing.JPanel paneBgDanhSach;
    private javax.swing.JPanel paneBgDanhSach1;
    private javax.swing.JPanel paneBgThongTin;
    private javax.swing.JPanel paneDanhSach;
    private javax.swing.JTabbedPane paneKhoNL;
    private javax.swing.JPanel paneThongTin;
    private javax.swing.JRadioButton rdoAll;
    private javax.swing.JRadioButton rdoGV;
    private javax.swing.JRadioButton rdoHS;
    private javax.swing.JRadioButton rdoKhoGiaVi;
    private javax.swing.JRadioButton rdoKhoHaiSan;
    private javax.swing.JRadioButton rdoKhoHetHang;
    private javax.swing.JRadioButton rdoKhoRau;
    private javax.swing.JRadioButton rdoKhoThit;
    private javax.swing.JRadioButton rdoKhoThucUong;
    private javax.swing.JRadioButton rdoRCQ;
    private javax.swing.JRadioButton rdoT;
    private javax.swing.JRadioButton rdoTU;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTable tblDanhSach1;
    private javax.swing.JTextField txtDonVi;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNgayNhap;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearch1;
    private javax.swing.JTextField txtSoLuongNhap;
    private javax.swing.JTextField txtSoLuongTon;
    private javax.swing.JTextField txtTenNL;
    // End of variables declaration//GEN-END:variables

    private final KhoDAO khoDAO = new KhoDAO();
    private final XuatKhoDAO xuatKhoDAO = new XuatKhoDAO();
    private List<KhoNguyenLieu> listKho;
    private List<XuatKho> listXuatKho;
    private int row = -1;

    public void init() {
        setSystemForm();
        loadTableDanhSach();
        loadTableXuatKho();
        updateStatus();

    }

    public void setForm(KhoNguyenLieu kho) {
        String dateKho;
        dateKho = XDate.toString(new Date(), "HH:mm:ss dd-MM-yyyy");
        txtID.setText(kho.getIdKho());
        txtTenNL.setText(kho.getTenNL());
        txtNgayNhap.setText(dateKho);
        txtSoLuongTon.setText(String.valueOf(kho.getSoLuong()));
        txtSoLuongNhap.setText("");
        txtDonVi.setText(kho.getDonVi());
        if (kho.getTenDanhMuc().contains("thịt")) {
            rdoT.setSelected(true);
        } else if (kho.getTenDanhMuc().contains("thức")) {
            rdoTU.setSelected(true);
        } else if (kho.getTenDanhMuc().contains("hải")) {
            rdoHS.setSelected(true);
        } else if (kho.getTenDanhMuc().contains("rau")) {
            rdoRCQ.setSelected(true);
        } else {
            rdoGV.setSelected(true);
        }
        updateStatus();
    }

    public KhoNguyenLieu getForm() throws Exception {
        if (validateForm()) {
            KhoNguyenLieu khoNguyenLieu = new KhoNguyenLieu();
            khoNguyenLieu.setIdKho(txtID.getText());
            khoNguyenLieu.setTenNL(txtTenNL.getText());
            khoNguyenLieu.setNgayNhap(XDate.toString(new Date(), "yyyy-MM-dd HH:mm:ss"));
            khoNguyenLieu.setDonVi(txtDonVi.getText());
            double soLuongNhap = 0;
            if (!txtSoLuongNhap.getText().trim().equals("")) {
                soLuongNhap = Double.parseDouble(txtSoLuongNhap.getText());
            }
            khoNguyenLieu.setSoLuong(Double.parseDouble(txtSoLuongTon.getText()) + soLuongNhap);
            if (rdoT.isSelected()) {
                khoNguyenLieu.setTenDanhMuc("Kho thịt");
            } else if (rdoTU.isSelected()) {
                khoNguyenLieu.setTenDanhMuc("Kho thức uống");
            } else if (rdoHS.isSelected()) {
                khoNguyenLieu.setTenDanhMuc("Kho hải sản");
            } else if (rdoRCQ.isSelected()) {
                khoNguyenLieu.setTenDanhMuc("Kho rau - củ - quả");
            } else {
                khoNguyenLieu.setTenDanhMuc("Kho gia vị");
            }
            return khoNguyenLieu;
        } else {
            return null;
        }
    }

    public void insert() {
        try {
            if (StringUtils.isEmpty(txtNgayNhap.getText())) {
                MsgBox.alert(this, "Nhấn New trước khi thêm mới");
            } else {
                KhoNguyenLieu nguyenLieu = getForm();
                khoDAO.insert(nguyenLieu);
                MsgBox.alert(this, "Thêm thành công!");
                clearForm();
                loadTableDanhSach();
            }
        } catch (Exception ex) {
            if(ex.getMessage().contains("duplicate key")) {
                MsgBox.error(this, "Nguyên liệu bạn nhập đã có trong kho!");
            } else {
                MsgBox.error(this, ex.getMessage());
            }
        }
    }

    public void update() {
        try {
            KhoNguyenLieu nguyenLieu = getForm();
            khoDAO.update(nguyenLieu);
            MsgBox.alert(this, "Cập nhật thành công!");
            loadTableDanhSach();
        } catch (Exception ex) {
            MsgBox.error(this, ex.getMessage());
        }
    }

    public void delete() {
        try {
            if (MsgBox.confirm(this, "Bạn có muốn xóa nguyên liệu này hay không?")) {
                khoDAO.delete(txtID.getText());
                MsgBox.alert(this, "Xóa thành nguyên liệu thành công!");
                clearForm();
                loadTableDanhSach();
            }
        } catch (Exception ex) {
            MsgBox.error(this, ex.getMessage());
        }
    }

    public void clearForm() {
        row = -1;
        KhoNguyenLieu khoNguyenLieu = new KhoNguyenLieu();
        khoNguyenLieu.setNgayNhap(XDate.toString(new Date(), "HH:mm:ss dd-MM-yyyy"));
        khoNguyenLieu.setTenDanhMuc("Kho thịt");
        setForm(khoNguyenLieu);
        updateStatus();
    }

    public void prev() {
        if (row > 0) {
            row--;
            setForm(listKho.get(row));
        }
    }

    public void next() {
        if (row < tblDanhSach.getRowCount() - 1) {
            row++;
            setForm(listKho.get(row));
        }
    }

    public void updateStatus() {
        boolean edit = (row >= 0);
        boolean first = (row == 0);
        boolean last = (row == tblDanhSach.getRowCount() - 1);
        // Trạng thái form
        txtID.setEditable(!edit);
        btnInsert.setEnabled(!edit);
        btnUpdate.setEnabled(edit);
        btnDelete.setEnabled(edit);

        // Trạng thái điều hướng
        btnPre.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
    }

    public boolean validateForm() throws Exception {
        if (txtTenNL.getText().trim().equals("")) {
            throw new Exception("Bạn chưa nhập tên nguyên liệu");
        }
        if (!txtSoLuongNhap.getText().trim().equals("")) {
            try {
                Double.parseDouble(txtSoLuongNhap.getText().trim());
            } catch (Exception e) {
                throw new Exception(e.getMessage());
            }
            if (Double.parseDouble(txtSoLuongNhap.getText().trim()) <= 0) {
                throw new Exception("Số lượng nhập phải lớn hơn 0");
            }
        }
        if (txtDonVi.getText().trim().equals("")) {
            throw new Exception("Bạn chưa nhập đơn vị");
        }

        return true;
    }
    Thread t = new Thread();
    public void loadTableDanhSach() {
        if(t.isAlive()) t.suspend();
        t = new Thread() {
            public void run() {
                DefaultTableModel model = (DefaultTableModel) tblDanhSach.getModel();
                model.setRowCount(0);
                listKho = khoDAO.searchKhoNguyenLieu(txtSearch.getText());
                for (KhoNguyenLieu khoNL : listKho) {
                    if (checkRdoHetHang(khoNL.getSoLuong())) {
                        continue;
                    }
                    if (checkRdoDanhMuc(khoNL.getTenDanhMuc())) {
                        continue;
                    }
                    model.addRow(new Object[]{
                        khoNL.getIdKho(),
                        khoNL.getTenNL(),
                        khoNL.getTenDanhMuc(),
                        khoNL.getDonVi(),
                        khoNL.getSoLuong(),
                        XDate.toString((Date) khoNL.getNgayNhap(), "HH:mm:ss  dd-MM-yyyy")
                    });
                }
            }
        }; t.start();
    }

    public void loadTableXuatKho() {
        DefaultTableModel model = (DefaultTableModel) tblDanhSach1.getModel();
        model.setRowCount(0);
        listXuatKho = xuatKhoDAO.searchXuatKhoNL(txtSearch1.getText());
        for (XuatKho xuatKho : listXuatKho) {
            model.addRow(new Object[]{
                xuatKho.getIdKho(),
                XDate.toString((Date) xuatKho.getNgayXuat(), "HH:mm:ss  dd-MM-yyyy"),
                xuatKho.getSoLuong(),
                xuatKho.getIdUser()
            });
        }
    }

    public boolean checkRdoHetHang(double t) {
        if (rdoKhoHetHang.isSelected()) {
            return (t != 0);
        }
        return false;
    }

    public boolean checkRdoDanhMuc(String nhomNL) {
        if (rdoAll.isSelected()) {
            return false;
        } else if (rdoKhoThit.isSelected()) {
            if (nhomNL.contains("thức")
                    || nhomNL.contains("rau")
                    || nhomNL.contains("gia")
                    || nhomNL.contains("hải")) {
                return true;
            }
        } else if (rdoKhoThucUong.isSelected()) {
            if (nhomNL.contains("thịt")
                    || nhomNL.contains("rau")
                    || nhomNL.contains("gia")
                    || nhomNL.contains("hải")) {
                return true;
            }
        } else if (rdoKhoRau.isSelected()) {
            if (nhomNL.contains("thức")
                    || nhomNL.contains("thịt")
                    || nhomNL.contains("gia")
                    || nhomNL.contains("hải")) {
                return true;
            }
        } else if (rdoKhoGiaVi.isSelected()) {
            if (nhomNL.contains("thức")
                    || nhomNL.contains("thịt")
                    || nhomNL.contains("rau")
                    || nhomNL.contains("hải")) {
                return true;
            }
        } else if (rdoKhoHaiSan.isSelected()) {
            if (nhomNL.contains("thức")
                    || nhomNL.contains("rau")
                    || nhomNL.contains("gia")
                    || nhomNL.contains("thịt")) {
                return true;
            }
        }
        return false;
    }

    public String toIdNL(String input) {
        String normalized = Normalizer.normalize(input, Normalizer.Form.NFD);
        String accentRemoved = normalized.replaceAll("\\p{InCombiningDiacriticalMarks}+", "");
        return accentRemoved.replace("đ", "d").replace("Đ", "D");
    }

    public void qrCode() {
        XGenCode.khoNguyenLieu = new KhoNguyenLieu();
        boolean t = MsgBox.confirm(this, "(Yes) -> Dùng QR Code từ máy tính để quét!\n(No) -> Dùng camera scan QR Code!");
        if (t) {
            readQR();
        } else {
            new CodeScanJDialog(null, true, 0).setVisible(true);
            if (XGenCode.khoNguyenLieu.getTenNL() != null) {

                setForm(XGenCode.khoNguyenLieu);
            }
        }
    }

    public void readQR() {
        try {
            String file = chonAnh();
            if (file != null) {
                String result = XGenCode.read(file);
                if (result.contains("khonguyenlieuKFood16092002|")) {
                    result = result.replace("khonguyenlieuKFood16092002|", "");
                    String[] khoQR = result.split("\\|");
                    XGenCode.khoNguyenLieu = new KhoNguyenLieu();
                    XGenCode.khoNguyenLieu.setIdKho(khoQR[0]);
                    XGenCode.khoNguyenLieu.setTenNL(khoQR[1]);
                    XGenCode.khoNguyenLieu.setSoLuong(0);
                    XGenCode.khoNguyenLieu.setDonVi(khoQR[2]);
                    XGenCode.khoNguyenLieu.setTenDanhMuc(khoQR[3]);
                    setForm(XGenCode.khoNguyenLieu);
                } else {
                    MsgBox.error(this, "Vui lòng chọn đúng mã QR nguyên liệu");
                }
            }
        } catch (Exception e) {
            MsgBox.error(this, e.getMessage());
        }
    }

    public String chonAnh() {
        fileChooser.setCurrentDirectory(new File("QRCode\\khoNL"));
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            XImage.save(file, "QRCode\\khoNL");
            String pathHinh = file.getAbsolutePath();
            return pathHinh;
        }
        return null;
    }

    public void setSystemForm() {
        // Set background cho form
        getContentPane().setBackground(new Color(219, 104, 108));
        paneThongTin.setBackground(new Color(219, 64, 68));
        paneDanhSach.setBackground(new Color(219, 64, 68));
        pane1.setBackground(new Color(219, 64, 68));

        setIconImage(XImage.getAppIcon());
    }
}
