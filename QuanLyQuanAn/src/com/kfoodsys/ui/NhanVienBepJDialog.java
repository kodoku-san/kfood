package com.kfoodsys.ui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.kfoodsys.dao.ChiTietHDDAO;
import com.kfoodsys.dao.HoaDonDAO;
import com.kfoodsys.dao.KhoDAO;
import com.kfoodsys.dao.ProceduDAO;
import com.kfoodsys.dao.RoomDAO;
import com.kfoodsys.dao.XuatKhoDAO;
import com.kfoodsys.entity.ChiTietBanAn;
import com.kfoodsys.entity.DanhSachOrder;
import com.kfoodsys.entity.KhoNguyenLieu;
import com.kfoodsys.entity.PhongAn;
import com.kfoodsys.entity.XuatKho;
import com.kfoodsys.utils.Auth;
import com.kfoodsys.utils.MsgBox;
import com.kfoodsys.utils.XDate;
import com.kfoodsys.utils.XExport;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author phuho
 */
public class NhanVienBepJDialog extends javax.swing.JDialog {

    /**
     * Creates new form NhanVienBepJDialog
     */
    public NhanVienBepJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupStt = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        tabPane = new javax.swing.JTabbedPane();
        paneOrder = new javax.swing.JPanel();
        paneBgOrder = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        cbbTang = new javax.swing.JComboBox<>();
        txtSearchOrder = new javax.swing.JTextField();
        rdoHas = new javax.swing.JRadioButton();
        rdoWait = new javax.swing.JRadioButton();
        rdoNew = new javax.swing.JRadioButton();
        rdoOrderAll = new javax.swing.JRadioButton();
        rdoUpd = new javax.swing.JRadioButton();
        paneChiTiet = new javax.swing.JPanel();
        paneBgOrder1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetailOrder = new javax.swing.JTable();
        lblChiTiet = new javax.swing.JLabel();
        btnTraMon = new javax.swing.JButton();
        btnCapNhatKho = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        paneKhoNL = new javax.swing.JPanel();
        paneBgOrder3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblKhoNguyenLieu = new javax.swing.JTable();
        txtSearchKho = new javax.swing.JTextField();
        lblKNL = new javax.swing.JLabel();
        btnCapNhat = new javax.swing.JButton();
        rdoKhoGiaVi = new javax.swing.JRadioButton();
        rdoKhoRau = new javax.swing.JRadioButton();
        rdoKhoThucUong = new javax.swing.JRadioButton();
        rdoKhoThit = new javax.swing.JRadioButton();
        rdoKhoHaiSan = new javax.swing.JRadioButton();
        rdoKhoAll = new javax.swing.JRadioButton();
        lblNameNV = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nhân viên bếp - KFood");
        setResizable(false);

        tabPane.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabPane.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        paneOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        paneBgOrder.setBackground(new java.awt.Color(255, 255, 255));

        tblOrder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Bàn 01",  new Integer(4), "New", "Tầng 1", "2021-11-11 19h"},
                {"Bàn 02",  new Integer(4), "Wait", "Tầng 1", "2021-11-11 17h"},
                {"Bàn 16",  new Integer(2), "Has food", "Tầng 2", "2021-11-11 16h"},
                {"Bàn 09",  new Integer(4), "New", "Tầng 1", "2021-11-11 20h"}
            },
            new String [] {
                "Tên bàn", "Số chỗ ngồi", "Trạng thái", "Khu vực", "Thời gian"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblOrder.setRowHeight(27);
        tblOrder.setShowGrid(true);
        tblOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblOrder);

        cbbTang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbbTang.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbbTang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTangActionPerformed(evt);
            }
        });

        txtSearchOrder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearchOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchOrderKeyReleased(evt);
            }
        });

        buttonGroupStt.add(rdoHas);
        rdoHas.setText("Has food");
        rdoHas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoHas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoActionPerformed(evt);
            }
        });

        buttonGroupStt.add(rdoWait);
        rdoWait.setText("Wait");
        rdoWait.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoWait.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoActionPerformed(evt);
            }
        });

        buttonGroupStt.add(rdoNew);
        rdoNew.setText("New");
        rdoNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoActionPerformed(evt);
            }
        });

        buttonGroupStt.add(rdoOrderAll);
        rdoOrderAll.setSelected(true);
        rdoOrderAll.setText("All");
        rdoOrderAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoOrderAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoActionPerformed(evt);
            }
        });

        buttonGroupStt.add(rdoUpd);
        rdoUpd.setText("Update");
        rdoUpd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoUpd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBgOrderLayout = new javax.swing.GroupLayout(paneBgOrder);
        paneBgOrder.setLayout(paneBgOrderLayout);
        paneBgOrderLayout.setHorizontalGroup(
            paneBgOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBgOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneBgOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
                    .addGroup(paneBgOrderLayout.createSequentialGroup()
                        .addComponent(cbbTang, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchOrder))
                    .addGroup(paneBgOrderLayout.createSequentialGroup()
                        .addComponent(rdoOrderAll)
                        .addGap(18, 18, 18)
                        .addComponent(rdoNew)
                        .addGap(18, 18, 18)
                        .addComponent(rdoWait)
                        .addGap(18, 18, 18)
                        .addComponent(rdoHas)
                        .addGap(18, 18, 18)
                        .addComponent(rdoUpd)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        paneBgOrderLayout.setVerticalGroup(
            paneBgOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBgOrderLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(paneBgOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbTang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(paneBgOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoOrderAll)
                    .addComponent(rdoNew)
                    .addComponent(rdoWait)
                    .addComponent(rdoHas)
                    .addComponent(rdoUpd))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout paneOrderLayout = new javax.swing.GroupLayout(paneOrder);
        paneOrder.setLayout(paneOrderLayout);
        paneOrderLayout.setHorizontalGroup(
            paneOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneBgOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        paneOrderLayout.setVerticalGroup(
            paneOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneBgOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPane.addTab("Order", paneOrder);

        paneChiTiet.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        paneBgOrder1.setBackground(new java.awt.Color(255, 255, 255));

        tblDetailOrder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblDetailOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên món", "Số lượng", "Đơn vị", "Ghi chú", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetailOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblDetailOrder.setRowHeight(27);
        tblDetailOrder.setShowGrid(true);
        jScrollPane2.setViewportView(tblDetailOrder);

        lblChiTiet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblChiTiet.setForeground(new java.awt.Color(51, 51, 51));
        lblChiTiet.setText("Chưa chọn bàn");

        btnTraMon.setBackground(new java.awt.Color(51, 0, 51));
        btnTraMon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTraMon.setForeground(new java.awt.Color(255, 255, 255));
        btnTraMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/restaurant-3-16.png"))); // NOI18N
        btnTraMon.setText("Trả món");
        btnTraMon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTraMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraMonActionPerformed(evt);
            }
        });

        btnCapNhatKho.setBackground(new java.awt.Color(51, 0, 51));
        btnCapNhatKho.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCapNhatKho.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhatKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-available-updates-20.png"))); // NOI18N
        btnCapNhatKho.setText("Cập nhật kho");
        btnCapNhatKho.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCapNhatKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatKhoActionPerformed(evt);
            }
        });

        btnExport.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExport.setForeground(new java.awt.Color(51, 0, 51));
        btnExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-microsoft-excel-20.png"))); // NOI18N
        btnExport.setText("Xuất bàn ăn");
        btnExport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBgOrder1Layout = new javax.swing.GroupLayout(paneBgOrder1);
        paneBgOrder1.setLayout(paneBgOrder1Layout);
        paneBgOrder1Layout.setHorizontalGroup(
            paneBgOrder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBgOrder1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneBgOrder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneBgOrder1Layout.createSequentialGroup()
                        .addComponent(btnExport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCapNhatKho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTraMon))
                    .addGroup(paneBgOrder1Layout.createSequentialGroup()
                        .addComponent(lblChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        paneBgOrder1Layout.setVerticalGroup(
            paneBgOrder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBgOrder1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblChiTiet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(paneBgOrder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTraMon)
                    .addComponent(btnCapNhatKho)
                    .addComponent(btnExport))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout paneChiTietLayout = new javax.swing.GroupLayout(paneChiTiet);
        paneChiTiet.setLayout(paneChiTietLayout);
        paneChiTietLayout.setHorizontalGroup(
            paneChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneChiTietLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneBgOrder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        paneChiTietLayout.setVerticalGroup(
            paneChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneChiTietLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneBgOrder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPane.addTab("Chi tiết", paneChiTiet);

        paneKhoNL.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        paneBgOrder3.setBackground(new java.awt.Color(255, 255, 255));

        tblKhoNguyenLieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblKhoNguyenLieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NL", "Tên NL", "Nhóm NL", "Đơn vị", "Số lượng", "Ngày nhập"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblKhoNguyenLieu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblKhoNguyenLieu.setRowHeight(27);
        tblKhoNguyenLieu.setShowGrid(true);
        jScrollPane4.setViewportView(tblKhoNguyenLieu);

        txtSearchKho.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearchKho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKhoKeyReleased(evt);
            }
        });

        lblKNL.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblKNL.setForeground(new java.awt.Color(51, 51, 51));
        lblKNL.setText("Kho nguyên liệu");

        btnCapNhat.setBackground(new java.awt.Color(51, 0, 51));
        btnCapNhat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCapNhat.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-available-updates-20.png"))); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoKhoGiaVi);
        rdoKhoGiaVi.setText("Kho gia vị");
        rdoKhoGiaVi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoKhoGiaVi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoKhoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoKhoRau);
        rdoKhoRau.setText("Kho rau - củ - quả");
        rdoKhoRau.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoKhoRau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoKhoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoKhoThucUong);
        rdoKhoThucUong.setText("Kho thức uống");
        rdoKhoThucUong.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoKhoThucUong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoKhoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoKhoThit);
        rdoKhoThit.setText("Kho thịt");
        rdoKhoThit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoKhoThit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoKhoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoKhoHaiSan);
        rdoKhoHaiSan.setText("Kho hải sản");
        rdoKhoHaiSan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoKhoHaiSan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoKhoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoKhoAll);
        rdoKhoAll.setSelected(true);
        rdoKhoAll.setText("Tất cả");
        rdoKhoAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rdoKhoAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoKhoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneBgOrder3Layout = new javax.swing.GroupLayout(paneBgOrder3);
        paneBgOrder3.setLayout(paneBgOrder3Layout);
        paneBgOrder3Layout.setHorizontalGroup(
            paneBgOrder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBgOrder3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneBgOrder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 894, Short.MAX_VALUE)
                    .addComponent(txtSearchKho, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(paneBgOrder3Layout.createSequentialGroup()
                        .addComponent(lblKNL)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneBgOrder3Layout.createSequentialGroup()
                        .addComponent(rdoKhoThit)
                        .addGap(18, 18, 18)
                        .addComponent(rdoKhoThucUong)
                        .addGap(18, 18, 18)
                        .addComponent(rdoKhoRau)
                        .addGap(18, 18, 18)
                        .addComponent(rdoKhoGiaVi)
                        .addGap(18, 18, 18)
                        .addComponent(rdoKhoHaiSan)
                        .addGap(18, 18, 18)
                        .addComponent(rdoKhoAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCapNhat)))
                .addContainerGap())
        );
        paneBgOrder3Layout.setVerticalGroup(
            paneBgOrder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBgOrder3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblKNL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(txtSearchKho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(paneBgOrder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneBgOrder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdoKhoThit)
                        .addComponent(rdoKhoThucUong)
                        .addComponent(rdoKhoRau)
                        .addComponent(rdoKhoGiaVi)
                        .addComponent(rdoKhoHaiSan)
                        .addComponent(rdoKhoAll))
                    .addComponent(btnCapNhat))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout paneKhoNLLayout = new javax.swing.GroupLayout(paneKhoNL);
        paneKhoNL.setLayout(paneKhoNLLayout);
        paneKhoNLLayout.setHorizontalGroup(
            paneKhoNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneKhoNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneBgOrder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        paneKhoNLLayout.setVerticalGroup(
            paneKhoNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneKhoNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paneBgOrder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabPane.addTab("Kho nguyên liệu", paneKhoNL);

        lblNameNV.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNameNV.setForeground(new java.awt.Color(255, 255, 255));
        lblNameNV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNameNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-user-20.png"))); // NOI18N
        lblNameNV.setText("Hồ Hoàng Phú");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblNameNV, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblNameNV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbbTangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTangActionPerformed
        getDanhSachOrder(cbbTang.getSelectedIndex() + 1 + "", 0);
        setDanhSachOrder();
    }//GEN-LAST:event_cbbTangActionPerformed

    private void txtSearchOrderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchOrderKeyReleased
        getDanhSachOrder(txtSearchOrder.getText(), cbbTang.getSelectedIndex() + 1);
        setDanhSachOrder();
    }//GEN-LAST:event_txtSearchOrderKeyReleased

    private void rdoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoActionPerformed
        String rdoString = evt.getActionCommand();
        if(rdoString.equals("All")) {
            getDanhSachOrder(cbbTang.getSelectedIndex() + 1 + "", 0);
        } else {
            getDanhSachOrder(rdoString, -(cbbTang.getSelectedIndex() + 1));
        }
        setDanhSachOrder();
    }//GEN-LAST:event_rdoActionPerformed

    private void tblOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderMouseClicked
        if(evt.getClickCount() == 2) {
            indexOrder = tblOrder.getSelectedRow();
            loadTableDetailOrder();
        }
    }//GEN-LAST:event_tblOrderMouseClicked

    private void btnCapNhatKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatKhoActionPerformed
        tabPane.setSelectedIndex(2);
    }//GEN-LAST:event_btnCapNhatKhoActionPerformed

    private void btnTraMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraMonActionPerformed
        int[] t = tblDetailOrder.getSelectedRows();
        for(int row : t) {
            traMon(row);
        }
    }//GEN-LAST:event_btnTraMonActionPerformed

    private void txtSearchKhoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKhoKeyReleased
        searchKho(txtSearchKho.getText().trim());
        setKhoNL();
    }//GEN-LAST:event_txtSearchKhoKeyReleased

    private void rdoKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoKhoActionPerformed
        KhoDAO khoDAO = new KhoDAO();
        if(evt.getActionCommand().equals("Tất cả")) {
            listKho = khoDAO.selectAll();
        } else {
            listKho = khoDAO.selectDanhMucNL(evt.getActionCommand());
        }
        setKhoNL();
    }//GEN-LAST:event_rdoKhoActionPerformed

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        int t = tblKhoNguyenLieu.getSelectedRowCount();
        if(t == 1) {
            try {
                double soLuongTon = Double.parseDouble(tblKhoNguyenLieu.getValueAt(tblKhoNguyenLieu.getSelectedRow(), 4).toString());
                String msgString = MsgBox.prompt(this, "Nhập số lượng xuất");
                double soLuong = Double.parseDouble(msgString);
                if(soLuong > 0 && soLuong <= soLuongTon) {
                    xuatKho(soLuong, tblKhoNguyenLieu.getSelectedRow());
                } else {
                    MsgBox.error(this, "Số lượng xuất không hợp lệ!");
                }
            } catch (Exception e) {
            }
        } else {
            MsgBox.alert(this, "Vui lòng chọn hàng cần cập nhật!");
        }
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        if(!listCTHD.isEmpty()) {
            try {
                XExport.hoaDonBepToExcel(listCTHD, lblChiTiet.getText());
                MsgBox.alert(this, "Xuất bàn ăn thành công!");
            } catch (Exception e) {
                MsgBox.error(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnExportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
        } catch (Exception e) {
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NhanVienBepJDialog dialog = new NhanVienBepJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnCapNhatKho;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnTraMon;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroupStt;
    private javax.swing.JComboBox<String> cbbTang;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblChiTiet;
    private javax.swing.JLabel lblKNL;
    private javax.swing.JLabel lblNameNV;
    private javax.swing.JPanel paneBgOrder;
    private javax.swing.JPanel paneBgOrder1;
    private javax.swing.JPanel paneBgOrder3;
    private javax.swing.JPanel paneChiTiet;
    private javax.swing.JPanel paneKhoNL;
    private javax.swing.JPanel paneOrder;
    private javax.swing.JRadioButton rdoHas;
    private javax.swing.JRadioButton rdoKhoAll;
    private javax.swing.JRadioButton rdoKhoGiaVi;
    private javax.swing.JRadioButton rdoKhoHaiSan;
    private javax.swing.JRadioButton rdoKhoRau;
    private javax.swing.JRadioButton rdoKhoThit;
    private javax.swing.JRadioButton rdoKhoThucUong;
    private javax.swing.JRadioButton rdoNew;
    private javax.swing.JRadioButton rdoOrderAll;
    private javax.swing.JRadioButton rdoUpd;
    private javax.swing.JRadioButton rdoWait;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JTable tblDetailOrder;
    private javax.swing.JTable tblKhoNguyenLieu;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTextField txtSearchKho;
    private javax.swing.JTextField txtSearchOrder;
    // End of variables declaration//GEN-END:variables

    
    private ArrayList<DanhSachOrder> listOrder = new ArrayList<>();
    private ArrayList<ChiTietBanAn> listCTHD = new ArrayList<>();
    private List<KhoNguyenLieu> listKho;
    private ProceduDAO proceduDAO = new ProceduDAO();
    private int indexOrder;
    public void init() {
        lblNameNV.setText(Auth.user.getHoTen());
        setSystemForm();
        getDanhSachOrder("all", 0);
        setDanhSachOrder();
        loadCbbPhong();
        getAllKhoNL();
        setKhoNL();
    }

    public void getDanhSachOrder(String keyword, int flag) {
        listOrder.removeAll(listOrder);
        
        for (Object[] row : proceduDAO.getNVBepOrder(keyword, flag)) {
            row[8] = XDate.toString((Date) row[8], "HH:mm:ss  dd-MM-yyyy");
            DanhSachOrder danhSachOrder = new DanhSachOrder();
            danhSachOrder.setIdUser((int) row[0]);
            danhSachOrder.setIdTable((int) row[1]);
            danhSachOrder.setIdHoaDon((int) row[2]);
            danhSachOrder.setIdRoom((int) row[3]);
            danhSachOrder.setTenBan((String) row[4]);
            danhSachOrder.setSoChoNgoi((int) row[5]);
            danhSachOrder.setTrangThai((String) row[6]);
            danhSachOrder.setTenRoom((String) row[7]);
            danhSachOrder.setNgayTaoHD((String) row[8]);
            listOrder.add(danhSachOrder);
        }
    }
    
    public void setDanhSachOrder() {
        DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
        model.setRowCount(0);
        for (DanhSachOrder danhSachOrder : listOrder) {
            model.addRow(new Object[]{
                danhSachOrder.getTenBan(),
                danhSachOrder.getSoChoNgoi(),
                danhSachOrder.getTrangThai(),
                danhSachOrder.getTenRoom(),
                danhSachOrder.getNgayTaoHD()
            });
        }
    }
    
    public void loadTableDetailOrder() {
        int t = indexOrder;
        listCTHD.removeAll(listCTHD);
        String tenBan = listOrder.get(t).getTenBan();
        String trangThai = listOrder.get(t).getTrangThai();
        if(trangThai.equalsIgnoreCase("new") || trangThai.equalsIgnoreCase("update")) {
            listOrder.get(t).setTrangThai("wait");
            HoaDonDAO hoaDonDAO = new HoaDonDAO();
            hoaDonDAO.update(listOrder.get(t));
            setDanhSachOrder();
        }
        int idRoom = listOrder.get(t).getIdRoom();
        for(Object[] row : proceduDAO.getNVbepChiTiet(idRoom, tenBan)) {
            ChiTietBanAn chiTietBanAn = new ChiTietBanAn();
            chiTietBanAn.setTenMon((String) row[0]);
            chiTietBanAn.setSoLuong((int) row[1]);
            chiTietBanAn.setDonVi((String) row[2]);
            chiTietBanAn.setGhiChu((String) row[3]);
            chiTietBanAn.setTrangThai((boolean) row[4]);
            chiTietBanAn.setIdHoaDon((int) row[5]);
            chiTietBanAn.setIdSanPham((int) row[6]);
            chiTietBanAn.setIdHDChiTiet((int) row[7]);
            chiTietBanAn.setGiaSP((double) row[8]);
            listCTHD.add(chiTietBanAn);
        }
        lblChiTiet.setText("Chi tiết: " + listOrder.get(t).getTenRoom() + " - " + listOrder.get(t).getTenBan());
        tabPane.setSelectedIndex(1);
        setChiTietOrder();
    }
    
    public void setChiTietOrder() {
        DefaultTableModel model = (DefaultTableModel) tblDetailOrder.getModel();
        model.setRowCount(0);
        for (ChiTietBanAn chiTietBanAn : listCTHD) {
            model.addRow(new Object[]{
                chiTietBanAn.getTenMon(),
                chiTietBanAn.getSoLuong(),
                chiTietBanAn.getDonVi(),
                chiTietBanAn.getGhiChu(),
                (chiTietBanAn.isTrangThai()) ? "Đã trả món" : "Chưa trả món"
            });
        }
    }

    public void traMon(int row) {
        ChiTietBanAn chiTietBanAn = listCTHD.get(row);
        if(chiTietBanAn.isTrangThai()) {
            MsgBox.alert(this, "Bạn đã trả món này rồi!");
        } else {
            chiTietBanAn.setTrangThai(true);
            ChiTietHDDAO chiTietHDDAO = new ChiTietHDDAO();
            chiTietHDDAO.update(chiTietBanAn);
            loadTableDetailOrder();
            MsgBox.alert(this, "Trả món thành công!");
        }
        if(isHasFood()) {
            listOrder.get(indexOrder).setTrangThai("has food");
            HoaDonDAO hoaDonDAO = new HoaDonDAO();
            hoaDonDAO.update(listOrder.get(indexOrder));
            setDanhSachOrder();
        }
    }
    
    public boolean isHasFood() {
        for(ChiTietBanAn chiTietBanAn : listCTHD) {
            if(!chiTietBanAn.isTrangThai()) return false;
        }
        return true;
    }
    
    public void loadCbbPhong() {
        RoomDAO dao = new RoomDAO();

        List<PhongAn> list = dao.selectAllRoom();
        for (int i = 0; i < list.size(); i++) {
            cbbTang.insertItemAt(list.get(i).getTenPhong(), i);
        }
        cbbTang.setSelectedIndex(0);
    }
    
    public void getAllKhoNL() {
        KhoDAO khoDAO = new KhoDAO();
        listKho = khoDAO.selectAll();
    }
    
    public void searchKho(String keyword) {
        KhoDAO khoDAO = new KhoDAO();
        listKho = khoDAO.searchKhoNguyenLieu(keyword);
    }
    
    public void setKhoNL() {
        DefaultTableModel model = (DefaultTableModel) tblKhoNguyenLieu.getModel();
        model.setRowCount(0);
        for(KhoNguyenLieu khoNguyenLieu : listKho) {
            model.addRow(new Object[] {
                khoNguyenLieu.getIdKho(),
                khoNguyenLieu.getTenNL(),
                khoNguyenLieu.getTenDanhMuc(),
                khoNguyenLieu.getDonVi(),
                khoNguyenLieu.getSoLuong(),
                XDate.toString((Date) khoNguyenLieu.getNgayNhap(), "HH:mm:ss  dd-MM-yyyy")
            });
        }
    }
    
    public void xuatKho(double soLuong, int indexListKho) {
        XuatKho xuatKho = new XuatKho();
        xuatKho.setIdKho(listKho.get(indexListKho).getIdKho());
        xuatKho.setSoLuong(soLuong);
        xuatKho.setNgayXuat(XDate.toString(new Date(), "yyyy-MM-dd HH:mm:ss"));
        xuatKho.setIdUser(Auth.user.getMaNV());
        new XuatKhoDAO().insert(xuatKho);
        MsgBox.alert(this, "Thành công!");
        setKhoDf();
        getAllKhoNL();
        setKhoNL();
    }
    
    public void setKhoDf() {
        txtSearchKho.setText("");
        rdoKhoAll.setSelected(true);
    }

    public void setSystemForm() {
        // Set background cho form
        getContentPane().setBackground(new Color(219, 104, 108));
        paneOrder.setBackground(new Color(219, 64, 68));
        paneKhoNL.setBackground(new Color(219, 64, 68));
        paneChiTiet.setBackground(new Color(219, 64, 68));

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        tblOrder.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tblOrder.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        tblOrder.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        tblOrder.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);

        tblDetailOrder.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        tblDetailOrder.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
    }
}
