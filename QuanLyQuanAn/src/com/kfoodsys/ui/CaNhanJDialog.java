package com.kfoodsys.ui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.kfoodsys.dao.NhanVienDAO;
import com.kfoodsys.entity.NhanVien;
import com.kfoodsys.utils.Auth;
import com.kfoodsys.utils.MsgBox;
import com.kfoodsys.utils.XImage;
import com.kfoodsys.utils.XGenCode;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.UIManager;

/**
 *
 * @author phuho
 */
public class CaNhanJDialog extends javax.swing.JDialog {

    /**
     * Creates new form CaNhanJDialog
     */
    public CaNhanJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        lblTitle = new javax.swing.JLabel();
        paneImg = new javax.swing.JPanel();
        lblHinh = new javax.swing.JLabel();
        lblHoTen = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        txtTaiKhoan = new javax.swing.JTextField();
        lblTaiKhoan = new javax.swing.JLabel();
        lblMatKhau = new javax.swing.JLabel();
        txtMail = new javax.swing.JTextField();
        lblMail = new javax.swing.JLabel();
        lblDiaChi = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiachi = new javax.swing.JTextArea();
        btnUpdate = new javax.swing.JButton();
        txtMatKhau = new javax.swing.JPasswordField();
        btnQRCode = new javax.swing.JButton();

        fileChooser.setCurrentDirectory(new java.io.File("C:\\Users\\Asus\\Documents"));
        fileChooser.setDialogTitle("Chọn ảnh đại diện");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thông tin tài khoản - KFood");
        setResizable(false);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-user-20.png"))); // NOI18N
        lblTitle.setText("Thông tin tài khoản");

        paneImg.setBackground(new java.awt.Color(219, 104, 108));

        lblHinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        lblHinh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblHinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHinhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout paneImgLayout = new javax.swing.GroupLayout(paneImg);
        paneImg.setLayout(paneImgLayout);
        paneImgLayout.setHorizontalGroup(
            paneImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneImgLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        paneImgLayout.setVerticalGroup(
            paneImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneImgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHinh, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblHoTen.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblHoTen.setForeground(new java.awt.Color(204, 255, 255));
        lblHoTen.setText("Họ và tên");

        txtHoTen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtTaiKhoan.setEditable(false);
        txtTaiKhoan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblTaiKhoan.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblTaiKhoan.setForeground(new java.awt.Color(204, 255, 255));
        lblTaiKhoan.setText("Tài khoản");

        lblMatKhau.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblMatKhau.setForeground(new java.awt.Color(204, 255, 255));
        lblMatKhau.setText("Mật khẩu");

        txtMail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblMail.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblMail.setForeground(new java.awt.Color(204, 255, 255));
        lblMail.setText("Email");

        lblDiaChi.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblDiaChi.setForeground(new java.awt.Color(204, 255, 255));
        lblDiaChi.setText("Địa chỉ");

        txtDiachi.setColumns(20);
        txtDiachi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDiachi.setRows(5);
        jScrollPane1.setViewportView(txtDiachi);

        btnUpdate.setBackground(new java.awt.Color(51, 0, 51));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/available-updates-16.png"))); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtMatKhau.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnQRCode.setBackground(new java.awt.Color(51, 0, 51));
        btnQRCode.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnQRCode.setForeground(new java.awt.Color(255, 255, 255));
        btnQRCode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/kfoodsys/icons/icons8-qr-code-20.png"))); // NOI18N
        btnQRCode.setText("Tạo QR Code đăng nhập");
        btnQRCode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnQRCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQRCodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnQRCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMatKhau))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMail, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1))
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHoTen)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaiKhoan)
                    .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatKhau)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMail)
                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDiaChi)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQRCode, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnQRCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQRCodeActionPerformed
        qrCode();
    }//GEN-LAST:event_btnQRCodeActionPerformed

    private void lblHinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHinhMouseClicked
        chonAnh();
    }//GEN-LAST:event_lblHinhMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
        } catch (Exception e) {
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CaNhanJDialog dialog = new CaNhanJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQRCode;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDiaChi;
    private javax.swing.JLabel lblHinh;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblMail;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JLabel lblTaiKhoan;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel paneImg;
    private javax.swing.JTextArea txtDiachi;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMail;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtTaiKhoan;
    // End of variables declaration//GEN-END:variables

    private NhanVien nhanVien = Auth.user;
    private static NhanVienDAO nhanVienDAO = new NhanVienDAO();

    public void init() {
        getContentPane().setBackground(new Color(219, 104, 108));
        setForm();
    }

    public void update() {
        try {
            NhanVien nhanVien = getForm();
            nhanVienDAO.update(nhanVien);
            MsgBox.alert(this, "Cập nhật thành công!");
        } catch (Exception e) {
            MsgBox.error(this, e.getMessage());
        }
    }

    public void setForm() {
        txtHoTen.setText(nhanVien.getHoTen());
        lblHinh.setIcon(ResizeImage("imgs\\" + nhanVien.getHinh()));
        lblHinh.setToolTipText(nhanVien.getHinh());
        txtTaiKhoan.setText(nhanVien.getTaiKhoan());
        txtMatKhau.setText(nhanVien.getMatKhau());
        txtDiachi.setText(nhanVien.getDiaChi());
        txtMail.setText(nhanVien.getEmail());
    }

    public NhanVien getForm() throws Exception {
        if (!validateForm()) {
            return null;
        }
        NhanVien nv = new NhanVien();
        nv.setHoTen(txtHoTen.getText());
        nv.setTaiKhoan(txtTaiKhoan.getText());
        nv.setMatKhau(new String(txtMatKhau.getPassword()));
        nv.setDiaChi(txtDiachi.getText());
        nv.setEmail(txtMail.getText());
        nv.setHinh(lblHinh.getToolTipText());
        nv.setMaNV(nhanVien.getMaNV());
        nv.setGioiTinh(nhanVien.getGioiTinh());
        nv.setQuyenNV(nhanVien.getQuyen());
        nv.setQuenMK(nhanVien.getQuenMK());

        return nv;
    }

    public void chonAnh() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            XImage.save(file, "imgs"); // lưu hình vào thư mục logos
            String pathHinh = file.getAbsolutePath();
            ImageIcon icon = XImage.read(file.getName()); // đọc hình từ logos
            lblHinh.setIcon(ResizeImage(pathHinh));
            lblHinh.setToolTipText(file.getName()); // giữ tên hình trong tooltip
        }
    }

    public void qrCode() {
        try {
            
            String QrCodeData = Auth.user.getTaiKhoan() + "___" + Auth.user.getMatKhau();
            XGenCode.createQRCode("login\\" + Auth.user.getTaiKhoan(), QrCodeData);
            
            MsgBox.alert(this, "Tạo QR code thành công!");
        } catch (Exception e) {
            MsgBox.error(this, e.getMessage());

        }
    }

    public boolean validateForm() throws Exception {
        if (txtHoTen.getText().trim().length() == 0) {
            throw new Exception("Vui lòng nhập họ tên");
        }
        if (new String(txtMatKhau.getPassword()).trim().length() < 6
                || new String(txtMatKhau.getPassword()).trim().length() > 32) {
            throw new Exception("Vui lòng nhập mật khẩu từ 6 đến 32 kí tự");
        }
        if (txtMail.getText().trim().length() == 0) {
            throw new Exception("Vui lòng nhập Email");
        }
        String regex = "^[a-zA-Z0-9]{1}[a-zA-Z0-9\\.]*[^\\.]@{0}([a-zA-Z0-9]+\\.+[a-zA-Z0-9]+)+$";
        if (!txtMail.getText().trim().matches(regex)) {
            throw new Exception("Vui lòng nhập đúng định dạng Email");
        }
        if (lblHinh.getToolTipText() == null) {
            throw new Exception("Bạn chưa chọn hình của sản phẩm");
        }

        return true;
    }

    public ImageIcon ResizeImage(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(lblHinh.getWidth(), lblHinh.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
}
